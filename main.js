(()=>{"use strict";var e=document.querySelector(".profile__edit-button"),t=document.querySelector(".popup_edit"),n=t.querySelector(".form__input_value_name"),r=t.querySelector(".form__input_value_occupation"),o=document.querySelector(".profile__add-button"),i=document.querySelector(".popup_add"),a=document.querySelector(".popup_avatar"),u=document.querySelector(".profile__image-cropper"),c=i.querySelector(".popup__button_add"),s=t.querySelector(".popup__button_edit"),l=document.querySelector(".popup__button_avatar"),f={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"form__input_type_error",errorMessageClass:"form__error_visible"};function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var h=function(){function e(t,n,r,o,i,a,u,c,s,l,f){var p,h,d=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),h=function(){d._element.remove(),d._element=null},(p="removeCard")in this?Object.defineProperty(this,p,{value:h,enumerable:!0,configurable:!0,writable:!0}):this[p]=h,this._selector=t,this._name=n,this._link=r,this._alt=o,this._likes=i,this._cardId=a,this._userId=u,this._ownerId=c,this._handleCardClick=s,this._handleCardDelete=l,this._handleLikeCard=f,this._element=this._getTemplate(),this._image=this._element.querySelector(".element__picture"),this._title=this._element.querySelector(".element__title"),this._likesNumber=this._element.querySelector(".element__likes-number"),this._trash=this._element.querySelector(".element__button-trash"),this._like=this._element.querySelector(".element__button-like"),this._isLike=this._likes.find((function(e){return e._id===d._userId}))}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._selector).content.querySelector(".element").cloneNode(!0)}},{key:"handleLike",value:function(e){this._likesNumber.textContent=e.likes.length,this._isLike=!this._isLike,this._isLike?this._like.classList.add("element__button-like_active"):this._like.classList.remove("element__button-like_active")}},{key:"getCardID",value:function(){return this._cardId}},{key:"getIsLike",value:function(){return this._isLike}},{key:"getView",value:function(){return this._isLike&&this._like.classList.add("element__button-like_active"),this._image.src=this._link,this._image.alt=this._name,this._title.textContent=this._name,this._likesNumber.textContent=this._likes.length,this._ownerId!==this._userId&&this._trash.classList.add("element__button-trash_hidden"),this._setEventListeners(),this._element}},{key:"_setEventListeners",value:function(){var e=this;this._like.addEventListener("click",(function(){return e._handleLikeCard(e)})),this._trash.addEventListener("click",(function(){return e._handleCardDelete(e)})),this._image.addEventListener("click",(function(){return e._handleCardClick()}))}}])&&p(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const y=function(){function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),_(this,"_showError",(function(e,t){var n=r._form.querySelector("#".concat(e.id,"-error"));n.textContent=t,n.classList.add(r._errorMessageClass),e.classList.add(r._inputErrorClass)})),_(this,"_hideError",(function(e){var t=r._form.querySelector("#".concat(e.id,"-error"));t.textContent="",t.classList.remove(r._errorMessageClass),e.classList.remove(r._inputErrorClass)})),_(this,"_checkInputValidity",(function(e){e.validity.valid?r._hideError(e):r._showError(e,e.validationMessage)})),_(this,"_hasInvalidInput",(function(){return Array.from(r._inputs).some((function(e){return!e.validity.valid}))})),_(this,"_toggleButtonState",(function(){r._hasInvalidInput()?(r._submitButton.classList.add(r._inactiveButtonClass),r._submitButton.disabled=!0):(r._submitButton.classList.remove(r._inactiveButtonClass),r._submitButton.disabled=!1)})),_(this,"_setInputListeners",(function(){r._toggleButtonState(),r._inputs.forEach((function(e){e.addEventListener("input",(function(){r._checkInputValidity(e),r._toggleButtonState()}))}))})),_(this,"enableValidation",(function(){r._setInputListeners()})),this._form=n,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorMessageClass=t.errorMessageClass,this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputs=this._form.querySelectorAll(this._inputSelector)}var t,n;return t=e,(n=[{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(this._inputs,this._submitButton),this._inputs.forEach((function(t){e._hideError(t)}))}}])&&d(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var b=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}}])&&v(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var g=function(){function e(t){var n=t.nameSelector,r=t.occupationSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._occupation=document.querySelector(r),this._avatar=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._occupation.textContent}}},{key:"setUserInfo",value:function(e){this._name.textContent=e.name,this._occupation.textContent=e.occupation,this._avatar.src=e.avatar}},{key:"getUserID",value:function(){return this._id}},{key:"setUserID",value:function(e){this._id=e}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var w=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){(t.target.classList.contains("popup_opened")||t.target.classList.contains("button-close"))&&e.close()}))}}])&&k(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function S(e){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},S(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function E(){return E="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=O(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},E.apply(this,arguments)}function O(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=I(e)););return e}function L(e,t){return L=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},L(e,t)}function j(e,t){if(t&&("object"===S(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return P(e)}function P(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function I(e){return I=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},I(e)}var R=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&L(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=I(r);if(o){var n=I(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return j(this,e)});function a(e,t){var n,r,o,u;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),u=function(e){e.preventDefault(),n._submit(n._getInputValues()),n.close()},(o="_handleSubmit")in(r=P(n=i.call(this,e)))?Object.defineProperty(r,o,{value:u,enumerable:!0,configurable:!0,writable:!0}):r[o]=u,n._submit=t,n._form=n._popup.querySelector(".form"),n._formInputs=n._form.querySelectorAll(".form__input"),n._submitButton=n._popup.querySelector(".popup__button"),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e={};return this._formInputs.forEach((function(t){e[t.name]=t.value})),e}},{key:"setEventListeners",value:function(){E(I(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",this._handleSubmit.bind(this))}},{key:"close",value:function(){E(I(a.prototype),"close",this).call(this),this._form.reset()}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(w);function q(e){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},q(e)}function B(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function T(){return T="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=x(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},T.apply(this,arguments)}function x(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=A(e)););return e}function D(e,t){return D=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},D(e,t)}function U(e,t){if(t&&("object"===q(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function A(e){return A=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},A(e)}var V=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&D(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=A(r);if(o){var n=A(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return U(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._popupLink=t._popup.querySelector(".popup__image"),t._popupSign=t._popup.querySelector(".popup__sign"),t}return t=a,(n=[{key:"open",value:function(e){this._popupLink.alt=e._name,this._popupLink.src=e._link,this._popupSign.textContent=e._name,T(A(a.prototype),"open",this).call(this)}}])&&B(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(w);function M(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var N=function(){function e(t){var n=t.url,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=n,this._headers=r}var t,n;return t=e,(n=[{key:"_handleResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}},{key:"getUserInfo",value:function(){var e=this;return fetch("".concat(this._url,"/users/me"),{headers:this._headers}).then((function(t){return e._handleResponse(t)}))}},{key:"getInitialCards",value:function(){var e=this;return fetch("".concat(this._url,"/cards"),{headers:this._headers}).then((function(t){return e._handleResponse(t)}))}},{key:"editProfile",value:function(e){var t=this;return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.occupation})}).then((function(e){return t._handleResponse(e)}))}},{key:"addCard",value:function(e){return fetch("".concat(this._url,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then(this._handleResponse)}},{key:"deleteCard",value:function(e){var t=this;return fetch("".concat(this._url,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return t._handleResponse(e)}))}},{key:"addLikeCard",value:function(e){var t=this;return fetch("".concat(this._url,"/cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then((function(e){return t._handleResponse(e)}))}},{key:"deleteLikeCard",value:function(e){var t=this;return fetch("".concat(this._url,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then((function(e){return t._handleResponse(e)}))}},{key:"patchAvatar",value:function(e){var t=this;return fetch("".concat(this._url,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.link})}).then((function(e){return t._handleResponse(e)}))}}])&&M(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function J(e){return J="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},J(e)}function H(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function z(){return z="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=$(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},z.apply(this,arguments)}function $(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=K(e)););return e}function F(e,t){return F=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},F(e,t)}function G(e,t){if(t&&("object"===J(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function K(e){return K=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},K(e)}var Q=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&F(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=K(r);if(o){var n=K(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return G(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._form=t._popup.querySelector(".popup__content_confirm"),t}return t=a,(n=[{key:"open",value:function(){z(K(a.prototype),"open",this).call(this)}},{key:"setAction",value:function(e){this._actionCallback=e}},{key:"setEventListeners",value:function(){var e=this;z(K(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._actionCallback()}))}}])&&H(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(w);function W(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var X=new N({url:"https://mesto.nomoreparties.co/v1/cohort-42",headers:{authorization:"f25ee209-d794-409d-8eae-29ba78e4618b","Content-Type":"application/json"}});Promise.all([X.getUserInfo(),X.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return W(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?W(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];Z.setUserInfo({name:o.name,occupation:o.about,avatar:o.avatar}),Z.setUserID(o._id),ee.renderItems(i.reverse())})).catch((function(e){console.log("Unable to load data from the server ".concat(e))}));var Y=function(e){var t=Z.getUserID(),n=new h(".template",e.name,e.link,e.alt,e.likes,e._id,t,e.owner._id,(function(){return te.open(n)}),(function(){oe.open(),oe.setAction((function(){X.deleteCard(e._id).then((function(){n.removeCard(),oe.close()})).catch((function(e){console.log("Unable to delete the card ".concat(e))}))}))}),(function(){n.getIsLike()?X.deleteLikeCard(e._id).then((function(e){n.handleLike(e)})).catch((function(e){console.log('Error: unable to remove "Like" '.concat(e))})):X.addLikeCard(e._id).then((function(e){n.handleLike(e)})).catch((function(e){console.log('Error: unable to add "Like" '.concat(e))}))}));return n.getView()},Z=new g({nameSelector:".profile__name",occupationSelector:".profile__occupation",avatarSelector:".profile__image"}),ee=new b({renderer:function(e){ee.addItem(Y(e))}},".elements"),te=new V(".popup_pic"),ne=new R(".popup_add",(function(e){var t={name:e.name,link:e.link};c.textContent="Creating...",X.addCard(t).then((function(e){ee.addItem(Y(e)),ne.close()})).catch((function(e){console.log("Unable to add the card ".concat(e))})).finally((function(){c.textContent="Create"}))})),re=new R(".popup_edit",(function(e){s.textContent="Saving...",X.editProfile(e).then((function(e){Z.setUserInfo({name:e.name,occupation:e.about,avatar:e.avatar}),re.close()})).catch((function(e){console.log("Error editing profile ".concat(e))})).finally((function(){s.textContent="Save"}))})),oe=new Q(".popup_confirm"),ie=new R(".popup_avatar",(function(e){l.textContent="Saving...",X.patchAvatar(e).then((function(e){Z.setUserInfo({name:e.name,occupation:e.about,avatar:e.avatar}),ie.close()})).catch((function(e){console.log("Error: unable to update the avatar ".concat(e))})).finally((function(){l.textContent="Save"}))})),ae=new y(f,t),ue=new y(f,i),ce=new y(f,a);ae.enableValidation(),ue.enableValidation(),ce.enableValidation(),te.setEventListeners(),ne.setEventListeners(),re.setEventListeners(),oe.setEventListeners(),ie.setEventListeners(),o.addEventListener("click",(function(){ue.resetValidation(),ne.open()})),e.addEventListener("click",(function(){var e=Z.getUserInfo();n.value=e.name,r.value=e.about,ae.resetValidation(),re.open()})),u.addEventListener("click",(function(){ce.resetValidation(),ie.open()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,